オブジェクト指向とは？
JavaやC言語のプログラミングは、『オブジェクト指向』プログラミングと言われる。この『オブジェクト指向』というのは、クラスを用いてクラスの中に必要なメンバを宣言し、

それをインスタンス化してオブジェクトにする。

この説明だと少し分かりにくいので後程詳しく説明するが、イメージとしては、クラスが「車の設計図」で

この設計図の中に必要な処理(メンバ)を書き、この設計図を基に車を作る。

この「設計図から車を作る」ことを『インスタンス化』と呼び、また、「設計図からできた車」が『オブジェクト(インスタンス)』に当たる。

Javaの参考書等を見ると『インスタンス』のことを『オブジェクト』と記載していることがほとんど。

なぜ『インスタンス』ではなく、『オブジェクト』が一般的に記載されているかということに関しては、英語で考えると分かりやすい。

英単語の意味としての『インスタンス』は、「実態」「事実」という意味であるのに対し、『オブジェクト』は「もの」「物体」といった意味。

「プログラミング言語」を「形に変えて」、「もの」として考えることが「オブジェクト指向」になる。

その為、「実物化して実態にする」より「実物化してものにする」として考えた方が頭に入りやすい。

以上の理由から、参考書には『オブジェクト』と記載しているのではないか。

インスタンスとオブジェクトは大体同じ意味なのであまり深く考えず、オブジェクト＝インスタンスくらいの感覚で良い。

上記のように、クラスやオブジェクトを基にしたプログラムの開発手法のことを『オブジェクト指向』と呼ぶ。
