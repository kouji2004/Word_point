オブジェクト指向とは？
JavaやC言語のプログラミングは、『オブジェクト指向』プログラミングと言われる。この『オブジェクト指向』というのは、クラスを用いてクラスの中に必要なメンバを宣言し、

それをインスタンス化してオブジェクトにする。

この説明だと少し分かりにくいので後程詳しく説明するが、イメージとしては、クラスが「車の設計図」で

この設計図の中に必要な処理(メンバ)を書き、この設計図を基に車を作る。

この「設計図から車を作る」ことを『インスタンス化』と呼び、また、「設計図からできた車」が『オブジェクト(インスタンス)』に当たる。

Javaの参考書等を見ると『インスタンス』のことを『オブジェクト』と記載していることがほとんど。

なぜ『インスタンス』ではなく、『オブジェクト』が一般的に記載されているかということに関しては、英語で考えると分かりやすい。

英単語の意味としての『インスタンス』は、「実態」「事実」という意味であるのに対し、『オブジェクト』は「もの」「物体」といった意味。

「プログラミング言語」を「形に変えて」、「もの」として考えることが「オブジェクト指向」になる。

その為、「実物化して実態にする」より「実物化してものにする」として考えた方が頭に入りやすい。

以上の理由から、参考書には『オブジェクト』と記載しているのではないか。

インスタンスとオブジェクトは大体同じ意味なのであまり深く考えず、オブジェクト＝インスタンスくらいの感覚で良い。

上記のように、クラスやオブジェクトを基にしたプログラムの開発手法のことを『オブジェクト指向』と呼ぶ。















インスタンスとは？
インスタンスとは、クラスを基に作成したオブジェクトのことを『インスタンス』と言う。

インスタンスは、オブジェクト指向のプログラミング言語にとってとても重要な要素で、

インスタンスを生成することによってプログラムの骨組みを作っていると言っても過言ではない。

以下がインスタンスの宣言方法。

1.class Car { //Carクラスの宣言
2.    int air = 10; //変数airに10を代入
3.    int gus; //変数gusを宣言
4.}
5.
6.Car car = new Car(); //Car型の変数carを宣言し、new演算子を使ってCarクラスのインスタンスを生成
7.

上記のプログラムより、1行目～3行目でCarクラスを宣言して

宣言したCarクラスを6行目でインスタンス化し、インスタンス(オブジェクト)を生成する。

インスタンス生成時に、インスタンス化のルールがある。それは、new演算子を使用すること。

初めに、クラス型変数を宣言。「クラス名 変数名」のように宣言する。

この変数に「new クラス名();」を代入して、インスタンス化を行う。

オブジェクトを作成することで、そのオブジェクトを呼び出して変数やメソッドを呼び出すことができる。

以下、オブジェクトを使って変数、メソッドを呼び出したプログラム。

 1.class Car {
 2.    public int air = 10;//変数airに10を代入
 3.    public int gus //変数gusを宣言
 4.    public void engine(){ //メソッドengineを宣言
 5.        System.out.println("車はガソリンで動く。");//メソッドの処理
 6.    }
 7.}
 8.class Main { //Mainクラスを宣言
 9.    public static void main(String[] args){ //mainメソッドを宣言
10.        Car car = new Car();//インスタンス化でインスタンス生成
11.        car.gus = 5;//変数
12.        car.engine();
13.        System.out.println(car.air);//変数airを出力
14    .    System.out.println(car.gus);//変数gusを出力
15.    }
16.}

実行結果：
車はガソリンで動く。
10
5

上記のプログラムでは、8行目にMainクラスを宣言し、

9行目にJavaを実行させるのに必要なpublic static void main(String[] args)のmainメソッド宣言。

このmainメソッド内でCarクラスをインスタンス化し、インスタンスcarから変数やメソッドにアクセスする。

アクセスする際は上記のプログラムの場合、

「car.変数(メソッド)」のように「インスタンス名.変数名(メソッド名)」のように.(ドット)で結んでインスタンス化したクラスの変数やメソッドにアクセス。


まとめ
Javaプログラミングで使用するインスタンスについての説明。

インスタンス(オブジェクト)はオブジェクト指向のプログラミングには必要な要素

Javaを学習する上ではとても大切。

